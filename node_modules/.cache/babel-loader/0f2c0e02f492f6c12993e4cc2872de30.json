{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praspatil\\\\Desktop\\\\React Tutorial Training\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from \"react\";\nimport Alert from './components/Alert';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light'); //wheteher dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode == 'light') {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\", \"success \");\n      document.title = 'Textutils-Dark Mode'; // setInterval(() => {\n      //   document.title='Textutils is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title='Install Textutils now';\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success \");\n      document.title = 'Textutils-Light Mode';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Textutils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this), \"const root = ReactDOM.createRoot( document.getElementById(\\\"root\\\") ); root.render(\", /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 32\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"teams\",\n            element: /*#__PURE__*/_jsxDEV(Teams, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 38\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \":teamId\",\n              element: /*#__PURE__*/_jsxDEV(Team, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"new\",\n              element: /*#__PURE__*/_jsxDEV(NewTeamForm, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              index: true,\n              element: /*#__PURE__*/_jsxDEV(LeagueStandings, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this), \");\", /*#__PURE__*/_jsxDEV(TextForm, {\n      showAlert: showAlert,\n      heading: \"Enter the text to analayze below\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","TextForm","React","useState","Alert","BrowserRouter","Routes","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["C:/Users/praspatil/Desktop/React Tutorial Training/textutils/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from \"react\";\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const[mode,setMode]=useState('light');//wheteher dark mode is enabled or not\n  const[alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500)\n  }\n  const toggleMode=()=>{\n    if(mode=='light'){\n      setMode(\"dark\");\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark Mode has been enabled\",\"success \");\n      document.title='Textutils-Dark Mode';\n      // setInterval(() => {\n      //   document.title='Textutils is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title='Install Textutils now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\",\"success \");\n      document.title='Textutils-Light Mode';\n    }\n    \n  }\n  return (\n    <> \n    \n<Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\")\n);\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Home />} />\n        <Route path=\"teams\" element={<Teams />}>\n          <Route path=\":teamId\" element={<Team />} />\n          <Route path=\"new\" element={<NewTeamForm />} />\n          <Route index element={<LeagueStandings />} />\n        </Route>\n      </Route>\n    </Routes>\n  </BrowserRouter>\n);\n<TextForm showAlert={showAlert} heading=\"Enter the text to analayze below\" mode={mode}/> \n\n<div className=\"container my-3\">\n \n  </div>\n\n\n\n\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}